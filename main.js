!function(){"use strict";class e{constructor(e,t){this._config=e,this._formElement=t}enableValidation(){this._setEventListeners()}_setEventListeners(){this._inputs=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector),this.toggleButtonState(),this._inputs.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}_disableSubmitButton(){this._buttonElement.disabled=!0,this._buttonElement.classList.add(this._config.inactiveButtonClass)}toggleButtonState(){this._hasInvalidInput()?this._disableSubmitButton():(this._buttonElement.classList.remove(this._config.inactiveButtonClass),this._buttonElement.disabled=!1)}resetValidation(){this.toggleButtonState(),this._inputs.forEach((e=>{this._removeErrorMessage(e)}))}_checkInputValidity(e){e.validity.valid?(this._removeErrorStyles(e,this._config),this._removeErrorMessage(e)):(this._addErrorStyles(e,this._config),this._addErrorMessage(e))}_hasInvalidInput(){return this._inputs.some((e=>!e.validity.valid))}_addErrorMessage(e){const t=this._formElement.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(this._config.errorTextVisible)}_removeErrorMessage(e){this._formElement.querySelector("#".concat(e.id,"-error")).classList.remove(this._config.errorTextVisible)}_removeErrorStyles(e){e.classList.remove(this._config.inputWithError)}_addErrorStyles(e){e.classList.add(this._config.inputWithError)}}class t{constructor(e,t){let{data:s,currentUserId:r,handlePictureClick:i,handleLikeClick:a,handleTrashButtonClick:o}=e;this._text=s.name,this._link=s.link,this._cardID=s._id,this._userId=r,this._ownerID=s.owner._id,this._likes=s.likes,this._handlePictureClick=i,this._cardSelector=t,this._handleTrashButtonClick=o,this._handleLikeClick=a}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".element").cloneNode(!0)}setLikesInfo(e){this._likes=e.likes,this.updateLikes()}_setEventListeners(){this.likeButton=this._element.querySelector(".element__like-button"),this.cardImage=this._element.querySelector(".element__photo"),this.cardTitle=this._element.querySelector(".element__title"),this._trashButton=this._element.querySelector(".element__trash"),this._likesCounter=this._element.querySelector(".element__like-button__counter"),this.updateLikes(),this.cardImage.addEventListener("click",(()=>this._handlePictureClick({url:this._link,title:this._text}))),this.likeButton.addEventListener("click",(()=>this._handleLikeClick(this))),this._trashButton.addEventListener("click",(()=>this._handleTrashButtonClick(this)))}generateCard(){return this._element=this._getTemplate(),this._setEventListeners(),this.makeTrashButtonInvisible(),this.cardImage.src=this._link,this.cardTitle.textContent=this._text,this.cardImage.alt=this._text,this._element}makeTrashButtonInvisible(){this._ownerID!=this._userId&&this._trashButton.remove()}updateLikes(){this._likesCounter.textContent=this._likes.length,this.checkIfLiked()?this.likeButton.classList.add("element__like-button_activated"):this.likeButton.classList.remove("element__like-button_activated")}checkIfLiked(){return Boolean(this._likes.find((e=>e._id===this._userId)))}getId(){return this._cardID}removeElement(){this._element.remove()}}var s=class{constructor(e){this._modal=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.closeModal()}setEventListeners(){this._modal.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal")||e.target.classList.contains("modal__close-button"))&&this.closeModal()}))}openModal(){this._modal.classList.add("modal_open"),document.addEventListener("keydown",this._handleEscClose)}closeModal(){this._modal.classList.remove("modal_open"),document.removeEventListener("keydown",this._handleEscClose)}},r=class extends s{constructor(e){let{popupSelector:t,handleFormSubmit:s}=e;super(t),this._popupForm=this._modal.querySelector(".modal__form"),this._inputList=this._modal.querySelectorAll(".modal__input"),this._handleFormSubmit=s}_getInputValues(){return this._formValues={},this._inputList.forEach((e=>{this._formValues[e.name]=e.value})),this._formValues}setEventListeners(){this._modal.addEventListener("submit",(e=>{this._handleFormSubmit(this._getInputValues()),e.preventDefault()})),super.setEventListeners()}closeModal(){this._popupForm.reset(),super.closeModal()}};const i=function(e){let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const s=document.querySelector(e).querySelector(".modal__submit-button");s.textContent=t?"Saving...":"Save"},a={editProfilePopup:document.querySelector("#edit-profile-modal"),addCardModal:document.querySelector("#add-card-modal"),addAvatarModal:document.querySelector("#change-avatar-modal")},o={formSelector:".modal__form",inputSelector:".modal__input",errorTextSelector:".modal__error-text",submitButtonSelector:".modal__submit-button",inactiveButtonClass:"modal__submit-button_disabled",inputWithError:"modal__input_has-error",errorTextVisible:"modal__error-text_visible"},n=document.querySelector("#open-modal-button"),l=document.forms["edit-profile-form"],d=l.name,c=l.description,h=document.querySelector(".profile__add-button"),u=new class{constructor(e){let{baseUrl:t,headers:s}=e;this._baseUrl=t,this._headers=s}_handleServerResponse(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._handleServerResponse)}getUserInfo(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._handleServerResponse)}editUserInfo(e){let{name:t,about:s}=e;return console.log({name:t,about:s}),fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:s})}).then(this._handleServerResponse)}addNewCard(e){let{name:t,link:s}=e;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:s})}).then(this._handleServerResponse)}deleteCard(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleServerResponse)}changeLikeStatus(e,t){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:t?"PUT":"DELETE",headers:this._headers}).then(this._handleServerResponse)}updateAvatar(e){let{avatar:t}=e;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._handleServerResponse)}}({baseUrl:"https://around.nomoreparties.co/v1/group-11",headers:{authorization:"31f62eb8-38ec-46e4-a611-45b4f4685de4","Content-Type":"application/json"}});new e(o,a.editProfilePopup).enableValidation();const _=new e(o,a.addCardModal);_.enableValidation();const m=new class{constructor(e){let{profileNameSelector:t,profileDescriptionSelector:s,userAvatarSelector:r,_id:i}=e;this._profileNameEl=document.querySelector(t),this._profileDescriptionEl=document.querySelector(s),this._userAvatarEl=document.querySelector(r),this._id=i}getUserId(){return this._id}getUserInfo(){return{profileName:this._profileNameEl.textContent,profileDescription:this._profileDescriptionEl.textContent,id:this._id,avatar:this._userAvatarEl.src}}setUserInfo(e){let{name:t,about:s,avatar:r,_id:i}=e;t&&(this._profileNameEl.textContent=t),s&&(this._profileDescriptionEl.textContent=s),r&&(this._userAvatarEl.src=r),i&&(this._id=i)}setAvatar(e){let{link:t}=e;this._userAvatarEl.src=t}}({profileNameSelector:"#profile-name",profileDescriptionSelector:"#profile-description",userAvatarSelector:".profile__avatar-image"}),p=new r({popupSelector:"#edit-profile-modal",handleFormSubmit:e=>{i("#edit-profile-modal",!0),u.editUserInfo({name:e.name,about:e.about}).then((e=>{m.setUserInfo({name:e.name,about:e.about}),p.closeModal()})).catch((e=>console.log("Unable to update profile information: ".concat(e)))).finally((()=>{i("#edit-profile-modal")}))}}),v=new e(o,a.addAvatarModal);v.enableValidation();const f=new r({popupSelector:"#change-avatar-modal",handleFormSubmit:e=>{i("#change-avatar-modal",!0),u.updateAvatar({avatar:e.link}).then((e=>{m.setAvatar({link:e.avatar}),f.closeModal()})).catch((e=>console.log("Unable change the user avatar: ".concat(res)))).finally((()=>{i("#change-avatar-modal")}))}});f.setEventListeners(),document.querySelector("#edit-avatar-button").addEventListener("click",(()=>{f.openModal(),v.resetValidation()})),n.addEventListener("click",(()=>{const e=m.getUserInfo();d.value=e.profileName,c.value=e.profileDescription,p.openModal()}));const S=new class extends s{constructor(e){super(e),this._imageElement=this._modal.querySelector(".modal__image"),this._imageCaption=this._modal.querySelector(".modal__caption")}openModal(e){this._imageElement.src=e.url,this._imageElement.alt="Image ".concat(e.title),this._imageCaption.textContent=e.title,super.openModal()}}("#image-modal"),g=new class extends s{handleSubmitAction(e){this._handleSubmitAction=e}setEventListeners(){this._modal.querySelector(".modal__delete-button").addEventListener("click",(e=>{e.preventDefault(),this._handleSubmitAction()})),super.setEventListeners()}}("#delete-popup");g.setEventListeners();const b=e=>{const s=new t({data:{...e},currentUserId:m.getUserId(),handlePictureClick:e=>{S.openModal(e)},handleLikeClick:e=>{u.changeLikeStatus(e.getId(),!e.checkIfLiked()).then((t=>{e.setLikesInfo({...t})})).catch((e=>console.log("Unable to change like status: ".concat(e))))},handleTrashButtonClick:e=>{g.openModal(),g.handleSubmitAction((()=>{u.deleteCard(e.getId()).then((()=>{e.removeElement(),g.closeModal()})).catch((e=>console.log("Unable to delete a card: ".concat(e))))}))}},"#element-template");return s.generateCard()};u.getAppInfo().then((e=>{let[t,s]=e;E.items=t,m.setUserInfo(s),E.renderItems()})).catch((e=>"Unable to load data: ".concat(e)));const E=new class{constructor(e,t){let{items:s,renderer:r}=e;this.items=s,this._renderer=r,this._container=document.querySelector(t)}renderItems(){this.items.reverse().forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:null,renderer:e=>{E.addItem(b(e))}},".elements"),k=new r({popupSelector:"#add-card-modal",handleFormSubmit:e=>{i("#add-card-modal",!0),u.addNewCard(e).then((e=>{E.addItem(b(e)),k.closeModal()})).catch((e=>console.log("Unable to add a card: ".concat(e)))).finally((()=>{i("#add-card-modal")}))}});h.addEventListener("click",(()=>{k.openModal(),_.toggleButtonState()})),S.setEventListeners(),p.setEventListeners(),k.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,